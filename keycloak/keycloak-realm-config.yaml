apiVersion: v1
kind: ConfigMap
metadata:
  name: keycloak-realm-config
data:
  realm.json: |
    {
      "id" : "fdd2ff87-1835-42e6-bb1b-c682663dc294",
      "realm" : "SpringBootRealm",
      "notBefore" : 0,
      "defaultSignatureAlgorithm" : "RS256",
      "revokeRefreshToken" : false,
      "refreshTokenMaxReuse" : 0,
      "accessTokenLifespan" : 1800,
      "accessTokenLifespanForImplicitFlow" : 900,
      "ssoSessionIdleTimeout" : 1800,
      "ssoSessionMaxLifespan" : 36000,
      "ssoSessionIdleTimeoutRememberMe" : 0,
      "ssoSessionMaxLifespanRememberMe" : 0,
      "offlineSessionIdleTimeout" : 2592000,
      "offlineSessionMaxLifespanEnabled" : false,
      "offlineSessionMaxLifespan" : 5184000,
      "clientSessionIdleTimeout" : 0,
      "clientSessionMaxLifespan" : 0,
      "clientOfflineSessionIdleTimeout" : 0,
      "clientOfflineSessionMaxLifespan" : 0,
      "accessCodeLifespan" : 60,
      "accessCodeLifespanUserAction" : 300,
      "accessCodeLifespanLogin" : 1800,
      "actionTokenGeneratedByAdminLifespan" : 43200,
      "actionTokenGeneratedByUserLifespan" : 300,
      "oauth2DeviceCodeLifespan" : 600,
      "oauth2DevicePollingInterval" : 5,
      "enabled" : true,
      "sslRequired" : "external",
      "registrationAllowed" : false,
      "registrationEmailAsUsername" : false,
      "rememberMe" : false,
      "verifyEmail" : false,
      "loginWithEmailAllowed" : true,
      "duplicateEmailsAllowed" : false,
      "resetPasswordAllowed" : false,
      "editUsernameAllowed" : false,
      "bruteForceProtected" : false,
      "permanentLockout" : false,
      "maxTemporaryLockouts" : 0,
      "bruteForceStrategy" : "MULTIPLE",
      "maxFailureWaitSeconds" : 900,
      "minimumQuickLoginWaitSeconds" : 60,
      "waitIncrementSeconds" : 60,
      "quickLoginCheckMilliSeconds" : 1000,
      "maxDeltaTimeSeconds" : 43200,
      "failureFactor" : 30,
      "roles" : {
        "realm" : [ {
          "id" : "10e9d0c5-9a20-4f1b-bc5d-fcf75777b4f6",
          "name" : "offline_access",
          "description" : "${role_offline-access}",
          "composite" : false,
          "clientRole" : false,
          "containerId" : "fdd2ff87-1835-42e6-bb1b-c682663dc294",
          "attributes" : { }
        }, {
          "id" : "a48ac4f0-1c19-48d8-862a-941d18de6d73",
          "name" : "default-roles-springbootrealm",
          "description" : "${role_default-roles}",
          "composite" : true,
          "composites" : {
            "realm" : [ "offline_access", "uma_authorization" ],
            "client" : {
              "account" : [ "manage-account", "view-profile" ]
            }
          },
          "clientRole" : false,
          "containerId" : "fdd2ff87-1835-42e6-bb1b-c682663dc294",
          "attributes" : { }
        }, {
          "id" : "e24f4b53-f651-4375-b405-b4d263001bf0",
          "name" : "uma_authorization",
          "description" : "${role_uma_authorization}",
          "composite" : false,
          "clientRole" : false,
          "containerId" : "fdd2ff87-1835-42e6-bb1b-c682663dc294",
          "attributes" : { }
        } ],
        "client" : {
          "realm-management" : [ {
            "id" : "f63c2557-0ce0-4930-b247-502293c058bc",
            "name" : "view-realm",
            "description" : "${role_view-realm}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "9e07e9f7-94bc-4101-82f7-35aa69c8e6b1",
            "attributes" : { }
          }, {
            "id" : "6e292711-1b41-4aeb-8d50-229b21740c69",
            "name" : "manage-realm",
            "description" : "${role_manage-realm}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "9e07e9f7-94bc-4101-82f7-35aa69c8e6b1",
            "attributes" : { }
          }, {
            "id" : "53cd8175-6367-40f9-82eb-b0329efd0021",
            "name" : "query-users",
            "description" : "${role_query-users}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "9e07e9f7-94bc-4101-82f7-35aa69c8e6b1",
            "attributes" : { }
          }, {
            "id" : "0ef12b6f-7ac8-4ae2-9ef8-260479b0f4ca",
            "name" : "impersonation",
            "description" : "${role_impersonation}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "9e07e9f7-94bc-4101-82f7-35aa69c8e6b1",
            "attributes" : { }
          }, {
            "id" : "312d612d-a50a-4c92-abdc-06b4d7b062ce",
            "name" : "manage-authorization",
            "description" : "${role_manage-authorization}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "9e07e9f7-94bc-4101-82f7-35aa69c8e6b1",
            "attributes" : { }
          }, {
            "id" : "a9d78655-c2d6-4b7c-b2b8-37cd29a1e964",
            "name" : "view-clients",
            "description" : "${role_view-clients}",
            "composite" : true,
            "composites" : {
              "client" : {
                "realm-management" : [ "query-clients" ]
              }
            },
            "clientRole" : true,
            "containerId" : "9e07e9f7-94bc-4101-82f7-35aa69c8e6b1",
            "attributes" : { }
          }, {
            "id" : "2dd25301-dd83-408f-9f37-20be9964a525",
            "name" : "view-events",
            "description" : "${role_view-events}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "9e07e9f7-94bc-4101-82f7-35aa69c8e6b1",
            "attributes" : { }
          }, {
            "id" : "508c828d-405f-4bda-8837-5d468d1e8a13",
            "name" : "query-groups",
            "description" : "${role_query-groups}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "9e07e9f7-94bc-4101-82f7-35aa69c8e6b1",
            "attributes" : { }
          }, {
            "id" : "ac8588f9-9f3c-4959-94fe-541ca31a36e3",
            "name" : "manage-users",
            "description" : "${role_manage-users}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "9e07e9f7-94bc-4101-82f7-35aa69c8e6b1",
            "attributes" : { }
          }, {
            "id" : "4793b547-b4b2-401d-9dcd-616665ca20fa",
            "name" : "query-realms",
            "description" : "${role_query-realms}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "9e07e9f7-94bc-4101-82f7-35aa69c8e6b1",
            "attributes" : { }
          }, {
            "id" : "0c7ab632-390f-4b27-8d4a-437701306c47",
            "name" : "realm-admin",
            "description" : "${role_realm-admin}",
            "composite" : true,
            "composites" : {
              "client" : {
                "realm-management" : [ "view-realm", "query-users", "manage-realm", "impersonation", "manage-authorization", "view-clients", "view-events", "query-groups", "query-realms", "manage-users", "manage-events", "create-client", "view-users", "manage-identity-providers", "manage-clients", "view-identity-providers", "query-clients", "view-authorization" ]
              }
            },
            "clientRole" : true,
            "containerId" : "9e07e9f7-94bc-4101-82f7-35aa69c8e6b1",
            "attributes" : { }
          }, {
            "id" : "7bdd2f64-1aa4-4690-90a0-1aeb220c375e",
            "name" : "manage-events",
            "description" : "${role_manage-events}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "9e07e9f7-94bc-4101-82f7-35aa69c8e6b1",
            "attributes" : { }
          }, {
            "id" : "b36ce212-e2a0-4db9-bff2-abc205dfb7a1",
            "name" : "create-client",
            "description" : "${role_create-client}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "9e07e9f7-94bc-4101-82f7-35aa69c8e6b1",
            "attributes" : { }
          }, {
            "id" : "b9443f42-bd09-45f0-b62d-f4bdae1cb110",
            "name" : "view-users",
            "description" : "${role_view-users}",
            "composite" : true,
            "composites" : {
              "client" : {
                "realm-management" : [ "query-groups", "query-users" ]
              }
            },
            "clientRole" : true,
            "containerId" : "9e07e9f7-94bc-4101-82f7-35aa69c8e6b1",
            "attributes" : { }
          }, {
            "id" : "ad6a807d-75cc-4c7a-ad7d-f6f72ed4360d",
            "name" : "manage-clients",
            "description" : "${role_manage-clients}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "9e07e9f7-94bc-4101-82f7-35aa69c8e6b1",
            "attributes" : { }
          }, {
            "id" : "608b8316-f8fc-46c3-bd53-8d1ae055a498",
            "name" : "manage-identity-providers",
            "description" : "${role_manage-identity-providers}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "9e07e9f7-94bc-4101-82f7-35aa69c8e6b1",
            "attributes" : { }
          }, {
            "id" : "37965133-8f27-41d4-ad12-3a12f78e65fa",
            "name" : "query-clients",
            "description" : "${role_query-clients}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "9e07e9f7-94bc-4101-82f7-35aa69c8e6b1",
            "attributes" : { }
          }, {
            "id" : "07f6bff4-4b54-46e0-b5c2-33099a22bf44",
            "name" : "view-identity-providers",
            "description" : "${role_view-identity-providers}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "9e07e9f7-94bc-4101-82f7-35aa69c8e6b1",
            "attributes" : { }
          }, {
            "id" : "7281167d-1c43-40cd-961d-f4b4e684873c",
            "name" : "view-authorization",
            "description" : "${role_view-authorization}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "9e07e9f7-94bc-4101-82f7-35aa69c8e6b1",
            "attributes" : { }
          } ],
          "security-admin-console" : [ ],
          "admin-cli" : [ ],
          "spring-boot-client" : [ {
            "id" : "5c3abf94-2b41-4b1e-af07-fa7f82b2b39f",
            "name" : "ADMIN",
            "description" : "",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "06d5906b-8da8-411a-89ee-a2e474b95830",
            "attributes" : { }
          }, {
            "id" : "a1960bd9-5b0d-43ab-a30f-69eb233b7864",
            "name" : "uma_protection",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "06d5906b-8da8-411a-89ee-a2e474b95830",
            "attributes" : { }
          }, {
            "id" : "5672742d-e4da-410c-8089-9860f59459f2",
            "name" : "USER",
            "description" : "",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "06d5906b-8da8-411a-89ee-a2e474b95830",
            "attributes" : { }
          } ],
          "account-console" : [ ],
          "broker" : [ {
            "id" : "01da379e-31ec-4b90-a137-b561e7745a85",
            "name" : "read-token",
            "description" : "${role_read-token}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "2fb55397-ce5b-4f32-a2bc-34a9da484adf",
            "attributes" : { }
          } ],
          "account" : [ {
            "id" : "89e727ec-8044-4c8c-b29f-aed47a50dcb6",
            "name" : "manage-account",
            "description" : "${role_manage-account}",
            "composite" : true,
            "composites" : {
              "client" : {
                "account" : [ "manage-account-links" ]
              }
            },
            "clientRole" : true,
            "containerId" : "699f5974-1488-4b42-85e9-c87360569fcc",
            "attributes" : { }
          }, {
            "id" : "1f30db44-1eee-4a7c-a54f-fb8593ff7100",
            "name" : "delete-account",
            "description" : "${role_delete-account}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "699f5974-1488-4b42-85e9-c87360569fcc",
            "attributes" : { }
          }, {
            "id" : "dae5ad47-8aa5-4ec0-a24d-146bdd09dfa1",
            "name" : "view-consent",
            "description" : "${role_view-consent}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "699f5974-1488-4b42-85e9-c87360569fcc",
            "attributes" : { }
          }, {
            "id" : "6b0f7cc1-41e3-4d89-aeb0-703b2c45d8ee",
            "name" : "view-applications",
            "description" : "${role_view-applications}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "699f5974-1488-4b42-85e9-c87360569fcc",
            "attributes" : { }
          }, {
            "id" : "920a00c0-c9c9-4380-a906-62d051560c19",
            "name" : "manage-account-links",
            "description" : "${role_manage-account-links}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "699f5974-1488-4b42-85e9-c87360569fcc",
            "attributes" : { }
          }, {
            "id" : "8ca7f115-bea3-4fe3-8291-f213451de1cf",
            "name" : "manage-consent",
            "description" : "${role_manage-consent}",
            "composite" : true,
            "composites" : {
              "client" : {
                "account" : [ "view-consent" ]
              }
            },
            "clientRole" : true,
            "containerId" : "699f5974-1488-4b42-85e9-c87360569fcc",
            "attributes" : { }
          }, {
            "id" : "c6708777-c857-4de7-adfb-83c97e52a00a",
            "name" : "view-profile",
            "description" : "${role_view-profile}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "699f5974-1488-4b42-85e9-c87360569fcc",
            "attributes" : { }
          }, {
            "id" : "11cf047c-a478-46c7-9337-01f5fdb193df",
            "name" : "view-groups",
            "description" : "${role_view-groups}",
            "composite" : false,
            "clientRole" : true,
            "containerId" : "699f5974-1488-4b42-85e9-c87360569fcc",
            "attributes" : { }
          } ]
        }
      },
      "groups" : [ ],
      "defaultRole" : {
        "id" : "a48ac4f0-1c19-48d8-862a-941d18de6d73",
        "name" : "default-roles-springbootrealm",
        "description" : "${role_default-roles}",
        "composite" : true,
        "clientRole" : false,
        "containerId" : "fdd2ff87-1835-42e6-bb1b-c682663dc294"
      },
      "requiredCredentials" : [ "password" ],
      "otpPolicyType" : "totp",
      "otpPolicyAlgorithm" : "HmacSHA1",
      "otpPolicyInitialCounter" : 0,
      "otpPolicyDigits" : 6,
      "otpPolicyLookAheadWindow" : 1,
      "otpPolicyPeriod" : 30,
      "otpPolicyCodeReusable" : false,
      "otpSupportedApplications" : [ "totpAppFreeOTPName", "totpAppGoogleName", "totpAppMicrosoftAuthenticatorName" ],
      "localizationTexts" : { },
      "webAuthnPolicyRpEntityName" : "keycloak",
      "webAuthnPolicySignatureAlgorithms" : [ "ES256", "RS256" ],
      "webAuthnPolicyRpId" : "",
      "webAuthnPolicyAttestationConveyancePreference" : "not specified",
      "webAuthnPolicyAuthenticatorAttachment" : "not specified",
      "webAuthnPolicyRequireResidentKey" : "not specified",
      "webAuthnPolicyUserVerificationRequirement" : "not specified",
      "webAuthnPolicyCreateTimeout" : 0,
      "webAuthnPolicyAvoidSameAuthenticatorRegister" : false,
      "webAuthnPolicyAcceptableAaguids" : [ ],
      "webAuthnPolicyExtraOrigins" : [ ],
      "webAuthnPolicyPasswordlessRpEntityName" : "keycloak",
      "webAuthnPolicyPasswordlessSignatureAlgorithms" : [ "ES256", "RS256" ],
      "webAuthnPolicyPasswordlessRpId" : "",
      "webAuthnPolicyPasswordlessAttestationConveyancePreference" : "not specified",
      "webAuthnPolicyPasswordlessAuthenticatorAttachment" : "not specified",
      "webAuthnPolicyPasswordlessRequireResidentKey" : "not specified",
      "webAuthnPolicyPasswordlessUserVerificationRequirement" : "not specified",
      "webAuthnPolicyPasswordlessCreateTimeout" : 0,
      "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister" : false,
      "webAuthnPolicyPasswordlessAcceptableAaguids" : [ ],
      "webAuthnPolicyPasswordlessExtraOrigins" : [ ],
      "users" : [ {
        "id" : "8bfeb831-17c7-4b3d-ae99-97aba71a619f",
        "username" : "service-account-spring-boot-client",
        "emailVerified" : false,
        "createdTimestamp" : 1741679708161,
        "enabled" : true,
        "totp" : false,
        "serviceAccountClientId" : "spring-boot-client",
        "credentials" : [ ],
        "disableableCredentialTypes" : [ ],
        "requiredActions" : [ ],
        "realmRoles" : [ "default-roles-springbootrealm" ],
        "clientRoles" : {
          "realm-management" : [ "view-realm", "impersonation", "manage-authorization", "view-clients", "query-groups", "query-realms", "manage-clients", "view-authorization", "query-users", "manage-realm", "view-events", "realm-admin", "manage-users", "manage-events", "create-client", "view-users", "manage-identity-providers", "view-identity-providers", "query-clients" ],
          "spring-boot-client" : [ "uma_protection" ],
          "broker" : [ "read-token" ],
          "account" : [ "delete-account", "view-consent", "view-profile", "view-groups", "manage-account", "view-applications", "manage-account-links", "manage-consent" ]
        },
        "notBefore" : 0,
        "groups" : [ ]
      }, {
        "id" : "385efe9a-7c66-481e-9af5-ccf19a098744",
        "username" : "superadmin",
        "firstName" : "admin",
        "lastName" : "admin",
        "email" : "admin@gmail.com",
        "emailVerified" : false,
        "createdTimestamp" : 1742657153748,
        "enabled" : true,
        "totp" : false,
        "credentials" : [ {
          "id" : "45452efa-7c0c-4043-b23f-4e427df57e0f",
          "type" : "password",
          "userLabel" : "My password",
          "createdDate" : 1742657543945,
          "secretData" : "{\"value\":\"BB8DlI8cZuKQSJrMw/wE08XYkD5+e6e0sWgcsu/V9xo=\",\"salt\":\"KGvoMNmXAy6dsTt72W612w==\",\"additionalParameters\":{}}",
          "credentialData" : "{\"hashIterations\":5,\"algorithm\":\"argon2\",\"additionalParameters\":{\"hashLength\":[\"32\"],\"memory\":[\"7168\"],\"type\":[\"id\"],\"version\":[\"1.3\"],\"parallelism\":[\"1\"]}}"
        } ],
        "disableableCredentialTypes" : [ ],
        "requiredActions" : [ ],
        "realmRoles" : [ "default-roles-springbootrealm" ],
        "clientRoles" : {
          "realm-management" : [ "realm-admin" ],
          "spring-boot-client" : [ "ADMIN" ]
        },
        "notBefore" : 0,
        "groups" : [ ]
      } ],
      "scopeMappings" : [ {
        "clientScope" : "offline_access",
        "roles" : [ "offline_access" ]
      } ],
      "clientScopeMappings" : {
        "account" : [ {
          "client" : "account-console",
          "roles" : [ "manage-account", "view-groups" ]
        } ]
      },
      "clients" : [ {
        "id" : "699f5974-1488-4b42-85e9-c87360569fcc",
        "clientId" : "account",
        "name" : "${client_account}",
        "rootUrl" : "${authBaseUrl}",
        "baseUrl" : "/realms/SpringBootRealm/account/",
        "surrogateAuthRequired" : false,
        "enabled" : true,
        "alwaysDisplayInConsole" : false,
        "clientAuthenticatorType" : "client-secret",
        "redirectUris" : [ "/realms/SpringBootRealm/account/*" ],
        "webOrigins" : [ ],
        "notBefore" : 0,
        "bearerOnly" : false,
        "consentRequired" : false,
        "standardFlowEnabled" : true,
        "implicitFlowEnabled" : false,
        "directAccessGrantsEnabled" : false,
        "serviceAccountsEnabled" : false,
        "publicClient" : true,
        "frontchannelLogout" : false,
        "protocol" : "openid-connect",
        "attributes" : {
          "realm_client" : "false",
          "post.logout.redirect.uris" : "+"
        },
        "authenticationFlowBindingOverrides" : { },
        "fullScopeAllowed" : false,
        "nodeReRegistrationTimeout" : 0,
        "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "basic", "email" ],
        "optionalClientScopes" : [ "address", "phone", "offline_access", "organization", "microprofile-jwt" ]
      }, {
        "id" : "ac7c8170-cf63-4a05-aa0d-4673ddc43eda",
        "clientId" : "account-console",
        "name" : "${client_account-console}",
        "rootUrl" : "${authBaseUrl}",
        "baseUrl" : "/realms/SpringBootRealm/account/",
        "surrogateAuthRequired" : false,
        "enabled" : true,
        "alwaysDisplayInConsole" : false,
        "clientAuthenticatorType" : "client-secret",
        "redirectUris" : [ "/realms/SpringBootRealm/account/*" ],
        "webOrigins" : [ ],
        "notBefore" : 0,
        "bearerOnly" : false,
        "consentRequired" : false,
        "standardFlowEnabled" : true,
        "implicitFlowEnabled" : false,
        "directAccessGrantsEnabled" : false,
        "serviceAccountsEnabled" : false,
        "publicClient" : true,
        "frontchannelLogout" : false,
        "protocol" : "openid-connect",
        "attributes" : {
          "realm_client" : "false",
          "post.logout.redirect.uris" : "+",
          "pkce.code.challenge.method" : "S256"
        },
        "authenticationFlowBindingOverrides" : { },
        "fullScopeAllowed" : false,
        "nodeReRegistrationTimeout" : 0,
        "protocolMappers" : [ {
          "id" : "ca14062b-634c-418a-a75f-0d9a418f9051",
          "name" : "audience resolve",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-audience-resolve-mapper",
          "consentRequired" : false,
          "config" : { }
        } ],
        "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "basic", "email" ],
        "optionalClientScopes" : [ "address", "phone", "offline_access", "organization", "microprofile-jwt" ]
      }, {
        "id" : "f0fc7fee-7e32-49fd-8d71-21ddfee15482",
        "clientId" : "admin-cli",
        "name" : "${client_admin-cli}",
        "surrogateAuthRequired" : false,
        "enabled" : true,
        "alwaysDisplayInConsole" : false,
        "clientAuthenticatorType" : "client-secret",
        "redirectUris" : [ ],
        "webOrigins" : [ ],
        "notBefore" : 0,
        "bearerOnly" : false,
        "consentRequired" : false,
        "standardFlowEnabled" : false,
        "implicitFlowEnabled" : false,
        "directAccessGrantsEnabled" : true,
        "serviceAccountsEnabled" : false,
        "publicClient" : true,
        "frontchannelLogout" : false,
        "protocol" : "openid-connect",
        "attributes" : {
          "realm_client" : "false",
          "client.use.lightweight.access.token.enabled" : "true",
          "post.logout.redirect.uris" : "+"
        },
        "authenticationFlowBindingOverrides" : { },
        "fullScopeAllowed" : true,
        "nodeReRegistrationTimeout" : 0,
        "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "basic", "email" ],
        "optionalClientScopes" : [ "address", "phone", "offline_access", "organization", "microprofile-jwt" ]
      }, {
        "id" : "2fb55397-ce5b-4f32-a2bc-34a9da484adf",
        "clientId" : "broker",
        "name" : "${client_broker}",
        "surrogateAuthRequired" : false,
        "enabled" : true,
        "alwaysDisplayInConsole" : false,
        "clientAuthenticatorType" : "client-secret",
        "redirectUris" : [ ],
        "webOrigins" : [ ],
        "notBefore" : 0,
        "bearerOnly" : true,
        "consentRequired" : false,
        "standardFlowEnabled" : true,
        "implicitFlowEnabled" : false,
        "directAccessGrantsEnabled" : false,
        "serviceAccountsEnabled" : false,
        "publicClient" : false,
        "frontchannelLogout" : false,
        "protocol" : "openid-connect",
        "attributes" : {
          "realm_client" : "true",
          "post.logout.redirect.uris" : "+"
        },
        "authenticationFlowBindingOverrides" : { },
        "fullScopeAllowed" : false,
        "nodeReRegistrationTimeout" : 0,
        "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "basic", "email" ],
        "optionalClientScopes" : [ "address", "phone", "offline_access", "organization", "microprofile-jwt" ]
      }, {
        "id" : "9e07e9f7-94bc-4101-82f7-35aa69c8e6b1",
        "clientId" : "realm-management",
        "name" : "${client_realm-management}",
        "surrogateAuthRequired" : false,
        "enabled" : true,
        "alwaysDisplayInConsole" : false,
        "clientAuthenticatorType" : "client-secret",
        "redirectUris" : [ ],
        "webOrigins" : [ ],
        "notBefore" : 0,
        "bearerOnly" : true,
        "consentRequired" : false,
        "standardFlowEnabled" : true,
        "implicitFlowEnabled" : false,
        "directAccessGrantsEnabled" : false,
        "serviceAccountsEnabled" : false,
        "publicClient" : false,
        "frontchannelLogout" : false,
        "protocol" : "openid-connect",
        "attributes" : {
          "realm_client" : "true",
          "post.logout.redirect.uris" : "+"
        },
        "authenticationFlowBindingOverrides" : { },
        "fullScopeAllowed" : false,
        "nodeReRegistrationTimeout" : 0,
        "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "basic", "email" ],
        "optionalClientScopes" : [ "address", "phone", "offline_access", "organization", "microprofile-jwt" ]
      }, {
        "id" : "82682a56-e81a-42e6-9269-e36b7c26aa45",
        "clientId" : "security-admin-console",
        "name" : "${client_security-admin-console}",
        "rootUrl" : "${authAdminUrl}",
        "baseUrl" : "/admin/SpringBootRealm/console/",
        "surrogateAuthRequired" : false,
        "enabled" : true,
        "alwaysDisplayInConsole" : false,
        "clientAuthenticatorType" : "client-secret",
        "redirectUris" : [ "/admin/SpringBootRealm/console/*" ],
        "webOrigins" : [ "+" ],
        "notBefore" : 0,
        "bearerOnly" : false,
        "consentRequired" : false,
        "standardFlowEnabled" : true,
        "implicitFlowEnabled" : false,
        "directAccessGrantsEnabled" : false,
        "serviceAccountsEnabled" : false,
        "publicClient" : true,
        "frontchannelLogout" : false,
        "protocol" : "openid-connect",
        "attributes" : {
          "realm_client" : "false",
          "client.use.lightweight.access.token.enabled" : "true",
          "post.logout.redirect.uris" : "+",
          "pkce.code.challenge.method" : "S256"
        },
        "authenticationFlowBindingOverrides" : { },
        "fullScopeAllowed" : true,
        "nodeReRegistrationTimeout" : 0,
        "protocolMappers" : [ {
          "id" : "35a3f344-aa86-43c9-a9be-d3ddb0e18890",
          "name" : "locale",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "user.attribute" : "locale",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "locale",
            "jsonType.label" : "String"
          }
        } ],
        "defaultClientScopes" : [ "web-origins", "acr", "profile", "roles", "basic", "email" ],
        "optionalClientScopes" : [ "address", "phone", "offline_access", "organization", "microprofile-jwt" ]
      }, {
        "id" : "06d5906b-8da8-411a-89ee-a2e474b95830",
        "clientId" : "spring-boot-client",
        "name" : "SpringBootClient",
        "description" : "",
        "rootUrl" : "http://localhost:8080",
        "adminUrl" : "http://localhost:9090",
        "baseUrl" : "",
        "surrogateAuthRequired" : false,
        "enabled" : true,
        "alwaysDisplayInConsole" : false,
        "clientAuthenticatorType" : "client-secret",
        "secret" : "V6gC5q0Xi93KGHqKUJrqwmBZnIyB5FY8",
        "redirectUris" : [ "http://localhost:9090/login/oauth2/code/keycloak" ],
        "webOrigins" : [ "http://localhost:9090" ],
        "notBefore" : 0,
        "bearerOnly" : false,
        "consentRequired" : false,
        "standardFlowEnabled" : true,
        "implicitFlowEnabled" : false,
        "directAccessGrantsEnabled" : true,
        "serviceAccountsEnabled" : true,
        "authorizationServicesEnabled" : true,
        "publicClient" : false,
        "frontchannelLogout" : true,
        "protocol" : "openid-connect",
        "attributes" : {
          "realm_client" : "false",
          "oidc.ciba.grant.enabled" : "false",
          "client.secret.creation.time" : "1742657664",
          "backchannel.logout.session.required" : "true",
          "frontchannel.logout.session.required" : "true",
          "post.logout.redirect.uris" : "+",
          "display.on.consent.screen" : "false",
          "oauth2.device.authorization.grant.enabled" : "false",
          "backchannel.logout.revoke.offline.tokens" : "false"
        },
        "authenticationFlowBindingOverrides" : { },
        "fullScopeAllowed" : true,
        "nodeReRegistrationTimeout" : -1,
        "defaultClientScopes" : [ "web-origins", "service_account", "acr", "profile", "roles", "basic", "email" ],
        "optionalClientScopes" : [ "address", "phone", "offline_access", "organization", "microprofile-jwt" ],
        "authorizationSettings" : {
          "allowRemoteResourceManagement" : true,
          "policyEnforcementMode" : "ENFORCING",
          "resources" : [ {
            "name" : "Default Resource",
            "type" : "urn:spring-boot-client:resources:default",
            "ownerManagedAccess" : false,
            "attributes" : { },
            "uris" : [ "/*" ]
          } ],
          "policies" : [ ],
          "scopes" : [ ],
          "decisionStrategy" : "UNANIMOUS"
        }
      } ],
      "clientScopes" : [ {
        "id" : "3cbe635c-eed9-45c5-adc4-672d032c294e",
        "name" : "email",
        "description" : "OpenID Connect built-in scope: email",
        "protocol" : "openid-connect",
        "attributes" : {
          "include.in.token.scope" : "true",
          "consent.screen.text" : "${emailScopeConsentText}",
          "display.on.consent.screen" : "true"
        },
        "protocolMappers" : [ {
          "id" : "8234d90d-fc29-44f2-a9e6-50613522a36e",
          "name" : "email verified",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-property-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "user.attribute" : "emailVerified",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "email_verified",
            "jsonType.label" : "boolean"
          }
        }, {
          "id" : "b3346678-7105-47aa-95b4-3df868a5afe9",
          "name" : "email",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "user.attribute" : "email",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "email",
            "jsonType.label" : "String"
          }
        } ]
      }, {
        "id" : "24ac6843-e009-49cd-bb6f-6469a011218f",
        "name" : "phone",
        "description" : "OpenID Connect built-in scope: phone",
        "protocol" : "openid-connect",
        "attributes" : {
          "include.in.token.scope" : "true",
          "consent.screen.text" : "${phoneScopeConsentText}",
          "display.on.consent.screen" : "true"
        },
        "protocolMappers" : [ {
          "id" : "707f64fa-afe3-46ec-ab52-c6b77dd1aaa1",
          "name" : "phone number verified",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "user.attribute" : "phoneNumberVerified",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "phone_number_verified",
            "jsonType.label" : "boolean"
          }
        }, {
          "id" : "e6a41d63-10c0-47c2-997a-25bfa9bc7e79",
          "name" : "phone number",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "user.attribute" : "phoneNumber",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "phone_number",
            "jsonType.label" : "String"
          }
        } ]
      }, {
        "id" : "85d78a80-988f-4c67-8537-50246a3bb713",
        "name" : "web-origins",
        "description" : "OpenID Connect scope for add allowed web origins to the access token",
        "protocol" : "openid-connect",
        "attributes" : {
          "include.in.token.scope" : "false",
          "consent.screen.text" : "",
          "display.on.consent.screen" : "false"
        },
        "protocolMappers" : [ {
          "id" : "74b0f22d-20f2-422e-b4cd-5eb2e7afcab1",
          "name" : "allowed web origins",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-allowed-origins-mapper",
          "consentRequired" : false,
          "config" : {
            "access.token.claim" : "true",
            "introspection.token.claim" : "true"
          }
        } ]
      }, {
        "id" : "940c6cda-cd15-4fd9-95ea-d8338b99fd3d",
        "name" : "address",
        "description" : "OpenID Connect built-in scope: address",
        "protocol" : "openid-connect",
        "attributes" : {
          "include.in.token.scope" : "true",
          "consent.screen.text" : "${addressScopeConsentText}",
          "display.on.consent.screen" : "true"
        },
        "protocolMappers" : [ {
          "id" : "5c8be453-e63e-41f5-b658-eedfedd74b6f",
          "name" : "address",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-address-mapper",
          "consentRequired" : false,
          "config" : {
            "user.attribute.formatted" : "formatted",
            "user.attribute.country" : "country",
            "introspection.token.claim" : "true",
            "user.attribute.postal_code" : "postal_code",
            "userinfo.token.claim" : "true",
            "user.attribute.street" : "street",
            "id.token.claim" : "true",
            "user.attribute.region" : "region",
            "access.token.claim" : "true",
            "user.attribute.locality" : "locality"
          }
        } ]
      }, {
        "id" : "4eaeabe8-161d-4a58-a8ea-f98c10cbef66",
        "name" : "saml_organization",
        "description" : "Organization Membership",
        "protocol" : "saml",
        "attributes" : {
          "display.on.consent.screen" : "false"
        },
        "protocolMappers" : [ {
          "id" : "289e8e30-8c2e-47dd-b0cd-c9c77f886987",
          "name" : "organization",
          "protocol" : "saml",
          "protocolMapper" : "saml-organization-membership-mapper",
          "consentRequired" : false,
          "config" : { }
        } ]
      }, {
        "id" : "f5a88c90-604a-4b03-b36f-1b4f5453af61",
        "name" : "service_account",
        "description" : "Specific scope for a client enabled for service accounts",
        "protocol" : "openid-connect",
        "attributes" : {
          "include.in.token.scope" : "false",
          "display.on.consent.screen" : "false"
        },
        "protocolMappers" : [ {
          "id" : "b92fbb03-5b2e-4c7b-98ef-af3b7382dda3",
          "name" : "Client IP Address",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usersessionmodel-note-mapper",
          "consentRequired" : false,
          "config" : {
            "user.session.note" : "clientAddress",
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "clientAddress",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "77433d6f-b09d-4697-93f8-f55fc6de79f4",
          "name" : "Client ID",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usersessionmodel-note-mapper",
          "consentRequired" : false,
          "config" : {
            "user.session.note" : "client_id",
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "client_id",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "ea679fa3-fb6e-4575-aca2-4031b3fdba4e",
          "name" : "Client Host",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usersessionmodel-note-mapper",
          "consentRequired" : false,
          "config" : {
            "user.session.note" : "clientHost",
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "clientHost",
            "jsonType.label" : "String"
          }
        } ]
      }, {
        "id" : "38d9da31-85f3-4ebe-b7f1-a57cf6e48c74",
        "name" : "basic",
        "description" : "OpenID Connect scope for add all basic claims to the token",
        "protocol" : "openid-connect",
        "attributes" : {
          "include.in.token.scope" : "false",
          "display.on.consent.screen" : "false"
        },
        "protocolMappers" : [ {
          "id" : "ac9015a2-6a45-4717-87e4-aebd2944164c",
          "name" : "auth_time",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usersessionmodel-note-mapper",
          "consentRequired" : false,
          "config" : {
            "user.session.note" : "AUTH_TIME",
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "auth_time",
            "jsonType.label" : "long"
          }
        }, {
          "id" : "fa0870a0-e3c9-4bb9-b697-958849254f53",
          "name" : "sub",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-sub-mapper",
          "consentRequired" : false,
          "config" : {
            "access.token.claim" : "true",
            "introspection.token.claim" : "true"
          }
        } ]
      }, {
        "id" : "b46c0b0d-b5fc-4b9d-9dc9-c127e6465afb",
        "name" : "role_list",
        "description" : "SAML role list",
        "protocol" : "saml",
        "attributes" : {
          "consent.screen.text" : "${samlRoleListScopeConsentText}",
          "display.on.consent.screen" : "true"
        },
        "protocolMappers" : [ {
          "id" : "2d646581-1ec6-41e4-82a5-7c4e66ee59d9",
          "name" : "role list",
          "protocol" : "saml",
          "protocolMapper" : "saml-role-list-mapper",
          "consentRequired" : false,
          "config" : {
            "single" : "false",
            "attribute.nameformat" : "Basic",
            "attribute.name" : "Role"
          }
        } ]
      }, {
        "id" : "97be58ac-7d58-4155-a242-12219f701f58",
        "name" : "profile",
        "description" : "OpenID Connect built-in scope: profile",
        "protocol" : "openid-connect",
        "attributes" : {
          "include.in.token.scope" : "true",
          "consent.screen.text" : "${profileScopeConsentText}",
          "display.on.consent.screen" : "true"
        },
        "protocolMappers" : [ {
          "id" : "12447c7c-bc15-4875-8367-497653e71a34",
          "name" : "full name",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-full-name-mapper",
          "consentRequired" : false,
          "config" : {
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true"
          }
        }, {
          "id" : "c7a5b38c-9f2e-4c03-9fb7-ecd54955337b",
          "name" : "website",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "user.attribute" : "website",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "website",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "3469c5f1-b45b-4869-a371-cd580b416c1a",
          "name" : "updated at",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "user.attribute" : "updatedAt",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "updated_at",
            "jsonType.label" : "long"
          }
        }, {
          "id" : "3fc8639a-3fbb-4d05-b95b-e05882fac71d",
          "name" : "gender",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "user.attribute" : "gender",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "gender",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "c46bd2f3-c461-45a2-af53-ca8e2cf9bc17",
          "name" : "profile",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "user.attribute" : "profile",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "profile",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "61cacaf1-d890-41c8-b8a3-ff3adace2510",
          "name" : "picture",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "user.attribute" : "picture",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "picture",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "44e2f958-d685-4778-a969-cb81934de267",
          "name" : "username",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "user.attribute" : "username",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "preferred_username",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "dc148282-ae15-4c0a-beca-e741782a4cb1",
          "name" : "zoneinfo",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "user.attribute" : "zoneinfo",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "zoneinfo",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "b977ab25-e92a-4893-86f6-01924eaffbfd",
          "name" : "locale",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "user.attribute" : "locale",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "locale",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "e1a21c9b-ca2d-48c2-b093-f2a2e14ab16d",
          "name" : "nickname",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "user.attribute" : "nickname",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "nickname",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "400b2960-075e-421a-adc4-4099feee37ab",
          "name" : "middle name",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "user.attribute" : "middleName",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "middle_name",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "1a384eeb-55d3-44c0-8c40-95ebce0ce46a",
          "name" : "family name",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "user.attribute" : "lastName",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "family_name",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "07f732d8-063f-4e92-b18c-d66063bcb26e",
          "name" : "given name",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "user.attribute" : "firstName",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "given_name",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "6d6a365e-756e-4638-b605-2360ec013aa3",
          "name" : "birthdate",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "user.attribute" : "birthdate",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "birthdate",
            "jsonType.label" : "String"
          }
        } ]
      }, {
        "id" : "30c3f4cf-8de7-461c-afe3-be9697947451",
        "name" : "acr",
        "description" : "OpenID Connect scope for add acr (authentication context class reference) to the token",
        "protocol" : "openid-connect",
        "attributes" : {
          "include.in.token.scope" : "false",
          "display.on.consent.screen" : "false"
        },
        "protocolMappers" : [ {
          "id" : "f1d103c7-7328-47ef-a4e6-c432d0d655a9",
          "name" : "acr loa level",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-acr-mapper",
          "consentRequired" : false,
          "config" : {
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true"
          }
        } ]
      }, {
        "id" : "0f2def4d-45c5-4efd-ab56-7555105bc3ec",
        "name" : "offline_access",
        "description" : "OpenID Connect built-in scope: offline_access",
        "protocol" : "openid-connect",
        "attributes" : {
          "consent.screen.text" : "${offlineAccessScopeConsentText}",
          "display.on.consent.screen" : "true"
        }
      }, {
        "id" : "a79d24e5-1607-4a04-bdbe-c755cc9c820e",
        "name" : "roles",
        "description" : "OpenID Connect scope for add user roles to the access token",
        "protocol" : "openid-connect",
        "attributes" : {
          "include.in.token.scope" : "false",
          "consent.screen.text" : "${rolesScopeConsentText}",
          "display.on.consent.screen" : "true"
        },
        "protocolMappers" : [ {
          "id" : "c5847e63-ca72-4091-b182-8a81fdf05b28",
          "name" : "realm roles",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-realm-role-mapper",
          "consentRequired" : false,
          "config" : {
            "user.attribute" : "foo",
            "introspection.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "realm_access.roles",
            "jsonType.label" : "String",
            "multivalued" : "true"
          }
        }, {
          "id" : "1c0821e9-972e-4700-a6a9-3fbaf721c987",
          "name" : "client roles",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-client-role-mapper",
          "consentRequired" : false,
          "config" : {
            "user.attribute" : "foo",
            "introspection.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "resource_access.${client_id}.roles",
            "jsonType.label" : "String",
            "multivalued" : "true"
          }
        }, {
          "id" : "4cf1f55e-c798-44c8-bd04-4c1869a8f649",
          "name" : "audience resolve",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-audience-resolve-mapper",
          "consentRequired" : false,
          "config" : {
            "access.token.claim" : "true",
            "introspection.token.claim" : "true"
          }
        } ]
      }, {
        "id" : "0f955791-16f2-4676-8a71-b1c03b190b08",
        "name" : "microprofile-jwt",
        "description" : "Microprofile - JWT built-in scope",
        "protocol" : "openid-connect",
        "attributes" : {
          "include.in.token.scope" : "true",
          "display.on.consent.screen" : "false"
        },
        "protocolMappers" : [ {
          "id" : "e6d8658a-8803-424a-8978-dec9db760403",
          "name" : "upn",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-attribute-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "userinfo.token.claim" : "true",
            "user.attribute" : "username",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "upn",
            "jsonType.label" : "String"
          }
        }, {
          "id" : "256cf9ac-a61b-4174-9e42-7e8c3cc04b74",
          "name" : "groups",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-usermodel-realm-role-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "multivalued" : "true",
            "userinfo.token.claim" : "true",
            "user.attribute" : "foo",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "groups",
            "jsonType.label" : "String"
          }
        } ]
      }, {
        "id" : "b92dee91-7b07-4587-8c04-aa366913e1ed",
        "name" : "organization",
        "description" : "Additional claims about the organization a subject belongs to",
        "protocol" : "openid-connect",
        "attributes" : {
          "include.in.token.scope" : "true",
          "consent.screen.text" : "${organizationScopeConsentText}",
          "display.on.consent.screen" : "true"
        },
        "protocolMappers" : [ {
          "id" : "79211702-016b-4dbd-9d9f-f865156a2eb3",
          "name" : "organization",
          "protocol" : "openid-connect",
          "protocolMapper" : "oidc-organization-membership-mapper",
          "consentRequired" : false,
          "config" : {
            "introspection.token.claim" : "true",
            "multivalued" : "true",
            "userinfo.token.claim" : "true",
            "id.token.claim" : "true",
            "access.token.claim" : "true",
            "claim.name" : "organization",
            "jsonType.label" : "String"
          }
        } ]
      } ],
      "defaultDefaultClientScopes" : [ "acr", "basic", "email", "saml_organization", "web-origins", "profile", "roles", "role_list" ],
      "defaultOptionalClientScopes" : [ "offline_access", "microprofile-jwt", "phone", "address", "organization" ],
      "browserSecurityHeaders" : {
        "contentSecurityPolicyReportOnly" : "",
        "xContentTypeOptions" : "nosniff",
        "referrerPolicy" : "no-referrer",
        "xRobotsTag" : "none",
        "xFrameOptions" : "SAMEORIGIN",
        "contentSecurityPolicy" : "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
        "xXSSProtection" : "1; mode=block",
        "strictTransportSecurity" : "max-age=31536000; includeSubDomains"
      },
      "smtpServer" : { },
      "eventsEnabled" : false,
      "eventsListeners" : [ "jboss-logging" ],
      "enabledEventTypes" : [ ],
      "adminEventsEnabled" : false,
      "adminEventsDetailsEnabled" : false,
      "identityProviders" : [ ],
      "identityProviderMappers" : [ ],
      "components" : {
        "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy" : [ {
          "id" : "79a6c9ba-23b4-46b9-8eaa-4c8d67626c53",
          "name" : "Consent Required",
          "providerId" : "consent-required",
          "subType" : "anonymous",
          "subComponents" : { },
          "config" : { }
        }, {
          "id" : "2e07147c-8a2b-4391-aa13-85cf68f614c0",
          "name" : "Allowed Protocol Mapper Types",
          "providerId" : "allowed-protocol-mappers",
          "subType" : "anonymous",
          "subComponents" : { },
          "config" : {
            "allowed-protocol-mapper-types" : [ "oidc-full-name-mapper", "oidc-address-mapper", "saml-role-list-mapper", "saml-user-attribute-mapper", "saml-user-property-mapper", "oidc-usermodel-attribute-mapper", "oidc-sha256-pairwise-sub-mapper", "oidc-usermodel-property-mapper" ]
          }
        }, {
          "id" : "17b30c19-efc5-448e-a72f-3ed1b6cc7ce8",
          "name" : "Trusted Hosts",
          "providerId" : "trusted-hosts",
          "subType" : "anonymous",
          "subComponents" : { },
          "config" : {
            "host-sending-registration-request-must-match" : [ "true" ],
            "client-uris-must-match" : [ "true" ]
          }
        }, {
          "id" : "315f8996-8e25-4c2a-8195-370e42c4709a",
          "name" : "Allowed Protocol Mapper Types",
          "providerId" : "allowed-protocol-mappers",
          "subType" : "authenticated",
          "subComponents" : { },
          "config" : {
            "allowed-protocol-mapper-types" : [ "saml-role-list-mapper", "oidc-full-name-mapper", "saml-user-property-mapper", "oidc-address-mapper", "oidc-usermodel-attribute-mapper", "oidc-usermodel-property-mapper", "saml-user-attribute-mapper", "oidc-sha256-pairwise-sub-mapper" ]
          }
        }, {
          "id" : "3ce9de8e-5643-4e25-988c-e9041b623e91",
          "name" : "Full Scope Disabled",
          "providerId" : "scope",
          "subType" : "anonymous",
          "subComponents" : { },
          "config" : { }
        }, {
          "id" : "37444e97-0590-4ee3-aa3d-8157cff011ff",
          "name" : "Max Clients Limit",
          "providerId" : "max-clients",
          "subType" : "anonymous",
          "subComponents" : { },
          "config" : {
            "max-clients" : [ "200" ]
          }
        }, {
          "id" : "ae9ef54b-3309-4351-a49c-5fb834c58ac0",
          "name" : "Allowed Client Scopes",
          "providerId" : "allowed-client-templates",
          "subType" : "anonymous",
          "subComponents" : { },
          "config" : {
            "allow-default-scopes" : [ "true" ]
          }
        }, {
          "id" : "3eb97642-f620-4633-ba5e-22ee46c32ef2",
          "name" : "Allowed Client Scopes",
          "providerId" : "allowed-client-templates",
          "subType" : "authenticated",
          "subComponents" : { },
          "config" : {
            "allow-default-scopes" : [ "true" ]
          }
        } ],
        "org.keycloak.keys.KeyProvider" : [ {
          "id" : "1a58a4e9-0c16-4c62-99b6-d1d25be60948",
          "name" : "hmac-generated-hs512",
          "providerId" : "hmac-generated",
          "subComponents" : { },
          "config" : {
            "kid" : [ "1d23f986-701c-487f-8880-654845f54747" ],
            "secret" : [ "BPsjTe6L3YPdyv9Wawuaq38W1A_gXLchosSsMoFMh-pb55fAfIQRPOBwLYm9s5aDq_rE-RyL7fJMj_60hVJD3ZnANzucicPf4UJCLP276edfxQDZF4elJ7w-gCAVC8pcL3PdG5Qm4y4iquv58WOZwDvZWnE5-rbsW-5AhF359xc" ],
            "priority" : [ "100" ],
            "algorithm" : [ "HS512" ]
          }
        }, {
          "id" : "91cb6471-5d9b-44b6-886f-2f0feace93a7",
          "name" : "rsa-enc-generated",
          "providerId" : "rsa-enc-generated",
          "subComponents" : { },
          "config" : {
            "privateKey" : [ "MIIEowIBAAKCAQEAoM/LMgMQxuy4+eu8K2L6orlD+VVFYfYjMcTE4fMmTwoQhs5xJd3dZmiH5/d4bmBGxLdLGIWUbV85fPf6e+wXMRWreMMXf9GAGvCAm4Amsah5zJ+9qUgdnAKY8kuZelItdfhofhdZVp9HiE8hD0YngxkPak/DBAYXVz/kmERGr1RFJdHHwv+HB6m//B8yAESuvZ1gbnRLpj6xAt89wXkOkU4Ik6ZluZIJ2SVbGPT0YX9zgeWkrA0zjnJ6KzvUOpWBlofOsxfxB0P8j9mTTv0rSHlcat8oLYjShPUzM5fmw2ELFbVZYroW/chSgfI6CdJJ0Kvj7NLmYjdFvE3AskPlhQIDAQABAoIBAAeunYecV2EVXmnL/d95uTzsSke/L9MT8c73FiuwFKiqc6so8gVL0b+KZ1GoxAdL0J2lnvADM5m89o9WflAMsXfuD9SzRyxbOvoueopTJyYOBRGGIQaU9BsnkZxjiaerBNJxpTY+0cz+S2nC0/K5mHoeCJs8x7VpwBQyMG6otlK6Sa2czSV9K3FejdyFWRs8Ocs8FEqKOWvO4mQL0lxoSakiyYyOm+eimKqKtuWKvYziXAm9hIajbNzlXNtscTIzMON1/buSmDekmRs0hmKUjq7WKZEJT5RoJm9mHMWvVQtWZaCY72+TdGLOY3a6H+PZ2kXSRyQuk4LZWUWQ+mc9wvECgYEA2DqhS/eE5eLs1z7SX1pZJJA7sOAMI1ycuZE1xhVg+zKgwYitu4ZIuz18mjHqfOMfPuvCFBQiCcQCmIDiY+ieLH0FBtT3HhniJ7geBpsnG3k6TI1tfC2tHL1c0O36Phlnf7PWS/cAh5zi+rYQgp48dDUsA4EkeKGlcMHnSgO9jjUCgYEAvmPH29RypF7GK84GeF4j4GgPxWEGBEP3Me9ycbRsIRKNvX+vN+2Jbj3WoZrMzhPRJ+yqv73C7roVyqouinRRjtEIMT4zfAxTmoQnRguErfXlJNKZYcaZy9p66ZODZF9daIyHiS2WxS6VzMyXB+dnybySN2081cTqNwbZhA22JBECgYEAuxN2y9/5tl9v5AZxQphLecvkKPKe7dVJr29H4/pJLuwtk2PqU80pjf3zmQDIzIZAWVLmVjLZBDP2vvT7ac8vUnRT7gZBS2S/evfb2oFQA4AOBX9zEzX9iVj4Pbc3g5S9LApuxMiOR8ZfxuPQQwIecbgzPVD1Of04wuawciPsU2UCgYAoc0KvLf/9dDVecTNmt3mf3/wZz3dbyKTocxs5lT+z9yEuNcagd1NPnMvRIfaJgiRZ+yp7+nFEDz06BdZFjFkXosm+zJxbqrLIjXNaqm/SFgBNRoFYCL38VbrvjWvJE4nhAJp7RrhVxIQHMyCTiVK/xdS6+faG5INulYH5UIB2QQKBgAwJBVExwMrL36+SIH51M2vGaBODoGz3xMAcXU897yN6yTZ4cm+9iQRIbK9kiHe1zgK1s3lXgJWbTXU78jGMRabtwLpHcunJLc3CHHUrJa08FAFzddEnFh0JAPlPo0t1MDHfuT4Gk57LeR381MEVngrX5SBbv9yCY7U9uLjK2bW1" ],
            "certificate" : [ "MIICrTCCAZUCBgGVvnUepjANBgkqhkiG9w0BAQsFADAaMRgwFgYDVQQDDA9TcHJpbmdCb290UmVhbG0wHhcNMjUwMzIyMTUyMzIxWhcNMzUwMzIyMTUyNTAxWjAaMRgwFgYDVQQDDA9TcHJpbmdCb290UmVhbG0wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCgz8syAxDG7Lj567wrYvqiuUP5VUVh9iMxxMTh8yZPChCGznEl3d1maIfn93huYEbEt0sYhZRtXzl89/p77BcxFat4wxd/0YAa8ICbgCaxqHnMn72pSB2cApjyS5l6Ui11+Gh+F1lWn0eITyEPRieDGQ9qT8MEBhdXP+SYREavVEUl0cfC/4cHqb/8HzIARK69nWBudEumPrEC3z3BeQ6RTgiTpmW5kgnZJVsY9PRhf3OB5aSsDTOOcnorO9Q6lYGWh86zF/EHQ/yP2ZNO/StIeVxq3ygtiNKE9TMzl+bDYQsVtVliuhb9yFKB8joJ0knQq+Ps0uZiN0W8TcCyQ+WFAgMBAAEwDQYJKoZIhvcNAQELBQADggEBACuQ305Pf9Lkv0GCPZ0kS8ABSEYBeEV7Xq5boTLaR/U5KVy3rAR8XaMwu/1J/TYH7PamlRn0gKSIxO3L5fpbFprfZ+fWfi/Jgi6pq3numDL2IqCUa0gyTG8JKoBTtydVb4b2jptMAwLFBCdqBpTz/Wy/StyE8JMhcVpi6mZzj2Euh4n42M1NoBH0ubmz33LgbLcwIvtgIOzaAese9VZE8gP88K0LvXzaf9awyVM2Z3ZsBzxE/eomsEKJfraLIEKcE2qUoH6Qs0YKBYJTfJrdFVJHOzvfbr5vsv2NF4IOwfDVFKBC96SQDZu+2UyFfCPt5k9tTEbrSK67mbGzGb67/Sg=" ],
            "priority" : [ "100" ],
            "algorithm" : [ "RSA-OAEP" ]
          }
        }, {
          "id" : "20b57d11-2f60-4766-aab5-12c8edb7c0b2",
          "name" : "fallback-HS256",
          "providerId" : "hmac-generated",
          "subComponents" : { },
          "config" : {
            "kid" : [ "b3ea9ca4-b3a4-491b-b805-8c23c4657ebb" ],
            "secret" : [ "oJvgcQ01xCs5MwwG-_X9XkNXu-bI3imyRNTYdAPvbybkCIqHG1qRWaQMzeCJCrNPCyeQOfG9kYJGcdGX0UYtlAGjJQtmp-keXwTO-QGmrONZpwdqzXkFoSlzHBgY3HHzgpWg3iig-TvVCAtDAtHU50Giyp9KGajfQ4mh5CVcjRg" ],
            "priority" : [ "-100" ],
            "algorithm" : [ "HS256" ]
          }
        }, {
          "id" : "4dfb05d7-f0e5-43f4-aa45-29454d3e47be",
          "name" : "rsa-generated",
          "providerId" : "rsa-generated",
          "subComponents" : { },
          "config" : {
            "privateKey" : [ "MIIEogIBAAKCAQEAs5ZJXykXFDY81G+Zvam1hpN/NTnnp+J+1pVWSPP31jxb4DHGOdSiNb7HBJ+9EtoSwo6Gndp44lz0479KnrtaIluWGG35o5jXn0zDq2s/tsdsd7T7DfK6h33xEb1SNY4PM0vOR7dN9hfq6e+JDapbF23J1ZuG6ZhnvVkjX5Za8uhzJk6pjybOFmLqsKI6xycB8aGoxwKyiIMX2+N9FWd5cSuQMkoV8Omd2HhzjHjWiG7h8BSVARb5tvXTH7jef3UiHOHbIJI1uVGCcZ4iX9BWD+CBWRJ0SoCseBsIoyBHRXuBUDOo8G5I9lemzkbbEirFXrxmVjGFrn5aCFhtJIvEYwIDAQABAoIBAAiZT5YQ35wGJM9/MHtWXuy8r0CbLy5ot+4KZIFFvT4y0atgdr9aIRI1uk3MYD9A1dke/e8dAODF1qv5Ateq3Nv8SqmMyoE81kY4ZL4WeoyD6/unXMYEM049h4dz6zXJQY0ROiVQ75iy+HqPD57p40ax6RIjSkhxFbaJSBpRlrU+u3qGi6XMuoWpTpcVQbabZsjzQCEYDx+7mLDETFkQSc/lkIda6R2My8yUAmaPyvnrw3y0q3hOcrwemg1p5zRgw9V7NJruXdprVudkvPCFWumvNSf4YwmbOKZJ//l1brauQiUCCudAW/60xzfLB+teT7/QZnE4iVr/wsyw925UW8ECgYEA6Ly/JlKWABauTSioIB+6NKMpecfgak6mCM796AgdAQqvDqODA6Sl12T3pxL8TIX9TDHpeyl4Ak6SKlaYIGCs51FPolhXaofKa0m6qpKVPhhkQ6q091cCGor6gzfPoqNp/TwMvbSVS4wHSse5wF3dk2pKVszfQYNOHVyGo7wwFXECgYEAxYmJybGvSiH7u68l7fV9ASnBWtvgLx29soIhC48dh48qEy+JhXPBye25/QzOKEyfJ7vfDbBOR6MEr3lYfk0fVypId0MCw/NEFh33BSjnRmIFEI1xo0tqzn/BijHuPiiY31iAVqbHRE2ylrePkz91kWTZ+TbYVnsL3lO7QrGifRMCgYAP7WLTd5FmXib9hsvCrwkqMwRSnjggblN0hN3hdDSv7pA+WzhLFoh27iT4nRcBEaZdAYlt8U+SMNhV52kvxg3vIqRlgtAwrSxQHVKV+8QU5MxvyQ3rY1v0fxBXzIj8I1zMhMCGdwZEjketeW+f14yjWwHNYOXicN72qW9ZYzaTMQKBgAEOEPxQxJzivZNtBgjVTMuay3uOvQ3DXOX9J+wF4aR9sT3U/SkHSzum111wmhFBB4CQ0koibOiZCEdfoIdcJhSzFxv78aHWRMDRfCY8569Kirhh6P90QafEquXwClOup9JZiKXt0hadS5zechfZOOmD3l4kWtdrZM7VJ6Tdif6dAoGAKfvNJ8GF6Cpni+z/VyRQk0+xdA1oP3DrW22ZJ3mUiBMmQXD1+HGOmRsErMz0GfZI72+tV+f+yeTYyIK7Hv3/t5urQ8F4FpDv3bAfVwBmhrZO1Bvg9mtFEkebl1GqY3mQeM/+4FSkk3Q8+Ek4I/XwvokMZ288vvk0GhXS33SLr5M=" ],
            "certificate" : [ "MIICrTCCAZUCBgGVvnUf5DANBgkqhkiG9w0BAQsFADAaMRgwFgYDVQQDDA9TcHJpbmdCb290UmVhbG0wHhcNMjUwMzIyMTUyMzIxWhcNMzUwMzIyMTUyNTAxWjAaMRgwFgYDVQQDDA9TcHJpbmdCb290UmVhbG0wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCzlklfKRcUNjzUb5m9qbWGk381Oeen4n7WlVZI8/fWPFvgMcY51KI1vscEn70S2hLCjoad2njiXPTjv0qeu1oiW5YYbfmjmNefTMOraz+2x2x3tPsN8rqHffERvVI1jg8zS85Ht032F+rp74kNqlsXbcnVm4bpmGe9WSNfllry6HMmTqmPJs4WYuqwojrHJwHxoajHArKIgxfb430VZ3lxK5AyShXw6Z3YeHOMeNaIbuHwFJUBFvm29dMfuN5/dSIc4dsgkjW5UYJxniJf0FYP4IFZEnRKgKx4GwijIEdFe4FQM6jwbkj2V6bORtsSKsVevGZWMYWufloIWG0ki8RjAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAJ40/CfLXED7stELq24JSVneGcXI55PhmXYRh92f2hQ5OY791RQAzkNq1wyitKbuI+03hFSC1Blr3B3A0UXJzxGvQKbFOYmFBnXUTzWcB6Ed0drldgFfD80E/XmmmT7hdk6pjpl+Jl5N9stRikF9Y3uQq0YgqRL2nHDalgAOKheS3DWjhL/q9uKIDFJ8eVh1EZUBczyHR5+AZkTooyRELqUFOR04ZegD+qJQC1yyFC7viQ1TX0Y6FkEdv/z8/BwhF2w0nkwhUHQ6c2a+EPWkgFY966emhSYoBJmlPz+8rjsT6VOwuaU23dK36ZmfQYeqLNH1fGmyYwjyTIbNkn+7SG4=" ],
            "priority" : [ "100" ]
          }
        }, {
          "id" : "ca3cd727-40a9-4df0-806c-37d547cf5630",
          "name" : "aes-generated",
          "providerId" : "aes-generated",
          "subComponents" : { },
          "config" : {
            "kid" : [ "034b3a67-7632-420c-be79-48a64ae03b3a" ],
            "secret" : [ "jKDWQiVBBQzJ4cEMYQtl5w" ],
            "priority" : [ "100" ]
          }
        } ]
      },
      "internationalizationEnabled" : false,
      "supportedLocales" : [ ],
      "authenticationFlows" : [ {
        "id" : "ddd55e40-b8c1-4b59-9f56-6cc3dc343546",
        "alias" : "Account verification options",
        "description" : "Method with which to verity the existing account",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "idp-email-verification",
          "authenticatorFlow" : false,
          "requirement" : "ALTERNATIVE",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticatorFlow" : true,
          "requirement" : "ALTERNATIVE",
          "priority" : 20,
          "autheticatorFlow" : true,
          "flowAlias" : "Verify Existing Account by Re-authentication",
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "6d86cfc5-d867-46f7-a0a0-8a6d5931104e",
        "alias" : "Browser - Conditional OTP",
        "description" : "Flow to determine if the OTP is required for the authentication",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "conditional-user-configured",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "auth-otp-form",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 20,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "5346afee-8c9d-4efe-beb0-73c8542204d8",
        "alias" : "Browser - Conditional Organization",
        "description" : "Flow to determine if the organization identity-first login is to be used",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "conditional-user-configured",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "organization",
          "authenticatorFlow" : false,
          "requirement" : "ALTERNATIVE",
          "priority" : 20,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "2f6671a6-3857-43de-b2c2-5af7b0f19c98",
        "alias" : "Direct Grant - Conditional OTP",
        "description" : "Flow to determine if the OTP is required for the authentication",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "conditional-user-configured",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "direct-grant-validate-otp",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 20,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "3d1981b3-7927-4250-8795-17cb87fae9f4",
        "alias" : "First Broker Login - Conditional Organization",
        "description" : "Flow to determine if the authenticator that adds organization members is to be used",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "conditional-user-configured",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "idp-add-organization-member",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 20,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "3911bf72-1148-49c9-b71a-b93781c99f91",
        "alias" : "First broker login - Conditional OTP",
        "description" : "Flow to determine if the OTP is required for the authentication",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "conditional-user-configured",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "auth-otp-form",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 20,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "6b32b98d-877e-4206-b1d5-35c16ec9c181",
        "alias" : "Handle Existing Account",
        "description" : "Handle what to do if there is existing account with same email/username like authenticated identity provider",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "idp-confirm-link",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticatorFlow" : true,
          "requirement" : "REQUIRED",
          "priority" : 20,
          "autheticatorFlow" : true,
          "flowAlias" : "Account verification options",
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "4d4ee339-41d0-4019-8dc3-b982bcead68b",
        "alias" : "Organization",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticatorFlow" : true,
          "requirement" : "CONDITIONAL",
          "priority" : 10,
          "autheticatorFlow" : true,
          "flowAlias" : "Browser - Conditional Organization",
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "848356cc-2db4-4fc0-902e-80d0b645c64d",
        "alias" : "Reset - Conditional OTP",
        "description" : "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "conditional-user-configured",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "reset-otp",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 20,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "098f5b5e-f763-4e20-bc52-6812977870af",
        "alias" : "User creation or linking",
        "description" : "Flow for the existing/non-existing user alternatives",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticatorConfig" : "create unique user config",
          "authenticator" : "idp-create-user-if-unique",
          "authenticatorFlow" : false,
          "requirement" : "ALTERNATIVE",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticatorFlow" : true,
          "requirement" : "ALTERNATIVE",
          "priority" : 20,
          "autheticatorFlow" : true,
          "flowAlias" : "Handle Existing Account",
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "0a612f16-ecdc-4f90-90a3-3fe101121251",
        "alias" : "Verify Existing Account by Re-authentication",
        "description" : "Reauthentication of existing account",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "idp-username-password-form",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticatorFlow" : true,
          "requirement" : "CONDITIONAL",
          "priority" : 20,
          "autheticatorFlow" : true,
          "flowAlias" : "First broker login - Conditional OTP",
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "45be40b9-34f0-4d31-b0ff-2a389a200c6d",
        "alias" : "browser",
        "description" : "Browser based authentication",
        "providerId" : "basic-flow",
        "topLevel" : true,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "auth-cookie",
          "authenticatorFlow" : false,
          "requirement" : "ALTERNATIVE",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "auth-spnego",
          "authenticatorFlow" : false,
          "requirement" : "DISABLED",
          "priority" : 20,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "identity-provider-redirector",
          "authenticatorFlow" : false,
          "requirement" : "ALTERNATIVE",
          "priority" : 25,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticatorFlow" : true,
          "requirement" : "ALTERNATIVE",
          "priority" : 26,
          "autheticatorFlow" : true,
          "flowAlias" : "Organization",
          "userSetupAllowed" : false
        }, {
          "authenticatorFlow" : true,
          "requirement" : "ALTERNATIVE",
          "priority" : 30,
          "autheticatorFlow" : true,
          "flowAlias" : "forms",
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "bd01084d-1618-4e62-8976-e1c98ea04d64",
        "alias" : "clients",
        "description" : "Base authentication for clients",
        "providerId" : "client-flow",
        "topLevel" : true,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "client-secret",
          "authenticatorFlow" : false,
          "requirement" : "ALTERNATIVE",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "client-jwt",
          "authenticatorFlow" : false,
          "requirement" : "ALTERNATIVE",
          "priority" : 20,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "client-secret-jwt",
          "authenticatorFlow" : false,
          "requirement" : "ALTERNATIVE",
          "priority" : 30,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "client-x509",
          "authenticatorFlow" : false,
          "requirement" : "ALTERNATIVE",
          "priority" : 40,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "d77d2f4c-7cbe-4634-a81b-87bf0bd43cdb",
        "alias" : "direct grant",
        "description" : "OpenID Connect Resource Owner Grant",
        "providerId" : "basic-flow",
        "topLevel" : true,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "direct-grant-validate-username",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "direct-grant-validate-password",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 20,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticatorFlow" : true,
          "requirement" : "CONDITIONAL",
          "priority" : 30,
          "autheticatorFlow" : true,
          "flowAlias" : "Direct Grant - Conditional OTP",
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "29df33a3-d1ad-4cb4-ac51-c52b0b234180",
        "alias" : "docker auth",
        "description" : "Used by Docker clients to authenticate against the IDP",
        "providerId" : "basic-flow",
        "topLevel" : true,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "docker-http-basic-authenticator",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "fa9e6bf2-0140-47e4-90f2-0c44c9f0eda9",
        "alias" : "first broker login",
        "description" : "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
        "providerId" : "basic-flow",
        "topLevel" : true,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticatorConfig" : "review profile config",
          "authenticator" : "idp-review-profile",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticatorFlow" : true,
          "requirement" : "REQUIRED",
          "priority" : 20,
          "autheticatorFlow" : true,
          "flowAlias" : "User creation or linking",
          "userSetupAllowed" : false
        }, {
          "authenticatorFlow" : true,
          "requirement" : "CONDITIONAL",
          "priority" : 50,
          "autheticatorFlow" : true,
          "flowAlias" : "First Broker Login - Conditional Organization",
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "0bafbd52-893e-40cc-bf5a-b08fcf999e5f",
        "alias" : "forms",
        "description" : "Username, password, otp and other auth forms.",
        "providerId" : "basic-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "auth-username-password-form",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticatorFlow" : true,
          "requirement" : "CONDITIONAL",
          "priority" : 20,
          "autheticatorFlow" : true,
          "flowAlias" : "Browser - Conditional OTP",
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "50aa1f01-fa57-4c34-b5de-613375c95ee0",
        "alias" : "registration",
        "description" : "Registration flow",
        "providerId" : "basic-flow",
        "topLevel" : true,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "registration-page-form",
          "authenticatorFlow" : true,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : true,
          "flowAlias" : "registration form",
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "5481100e-ddd0-46cd-8ed3-ae3e84e88802",
        "alias" : "registration form",
        "description" : "Registration form",
        "providerId" : "form-flow",
        "topLevel" : false,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "registration-user-creation",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 20,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "registration-password-action",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 50,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "registration-recaptcha-action",
          "authenticatorFlow" : false,
          "requirement" : "DISABLED",
          "priority" : 60,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "registration-terms-and-conditions",
          "authenticatorFlow" : false,
          "requirement" : "DISABLED",
          "priority" : 70,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "073f4bfa-946f-42e8-97f8-aa30827c668e",
        "alias" : "reset credentials",
        "description" : "Reset credentials for a user if they forgot their password or something",
        "providerId" : "basic-flow",
        "topLevel" : true,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "reset-credentials-choose-user",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "reset-credential-email",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 20,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticator" : "reset-password",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 30,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        }, {
          "authenticatorFlow" : true,
          "requirement" : "CONDITIONAL",
          "priority" : 40,
          "autheticatorFlow" : true,
          "flowAlias" : "Reset - Conditional OTP",
          "userSetupAllowed" : false
        } ]
      }, {
        "id" : "5ea8999f-cde0-4723-949f-a011933b374b",
        "alias" : "saml ecp",
        "description" : "SAML ECP Profile Authentication Flow",
        "providerId" : "basic-flow",
        "topLevel" : true,
        "builtIn" : true,
        "authenticationExecutions" : [ {
          "authenticator" : "http-basic-authenticator",
          "authenticatorFlow" : false,
          "requirement" : "REQUIRED",
          "priority" : 10,
          "autheticatorFlow" : false,
          "userSetupAllowed" : false
        } ]
      } ],
      "authenticatorConfig" : [ {
        "id" : "7176e180-1ec7-4f45-a3ce-50672253c089",
        "alias" : "create unique user config",
        "config" : {
          "require.password.update.after.registration" : "false"
        }
      }, {
        "id" : "6763dc9e-378e-43f6-87b8-6fec6442ef8b",
        "alias" : "review profile config",
        "config" : {
          "update.profile.on.first.login" : "missing"
        }
      } ],
      "requiredActions" : [ {
        "alias" : "CONFIGURE_TOTP",
        "name" : "Configure OTP",
        "providerId" : "CONFIGURE_TOTP",
        "enabled" : true,
        "defaultAction" : false,
        "priority" : 10,
        "config" : { }
      }, {
        "alias" : "TERMS_AND_CONDITIONS",
        "name" : "Terms and Conditions",
        "providerId" : "TERMS_AND_CONDITIONS",
        "enabled" : false,
        "defaultAction" : false,
        "priority" : 20,
        "config" : { }
      }, {
        "alias" : "UPDATE_PASSWORD",
        "name" : "Update Password",
        "providerId" : "UPDATE_PASSWORD",
        "enabled" : true,
        "defaultAction" : false,
        "priority" : 30,
        "config" : { }
      }, {
        "alias" : "UPDATE_PROFILE",
        "name" : "Update Profile",
        "providerId" : "UPDATE_PROFILE",
        "enabled" : true,
        "defaultAction" : false,
        "priority" : 40,
        "config" : { }
      }, {
        "alias" : "VERIFY_EMAIL",
        "name" : "Verify Email",
        "providerId" : "VERIFY_EMAIL",
        "enabled" : true,
        "defaultAction" : false,
        "priority" : 50,
        "config" : { }
      }, {
        "alias" : "delete_account",
        "name" : "Delete Account",
        "providerId" : "delete_account",
        "enabled" : false,
        "defaultAction" : false,
        "priority" : 60,
        "config" : { }
      }, {
        "alias" : "webauthn-register",
        "name" : "Webauthn Register",
        "providerId" : "webauthn-register",
        "enabled" : true,
        "defaultAction" : false,
        "priority" : 70,
        "config" : { }
      }, {
        "alias" : "webauthn-register-passwordless",
        "name" : "Webauthn Register Passwordless",
        "providerId" : "webauthn-register-passwordless",
        "enabled" : true,
        "defaultAction" : false,
        "priority" : 80,
        "config" : { }
      }, {
        "alias" : "VERIFY_PROFILE",
        "name" : "Verify Profile",
        "providerId" : "VERIFY_PROFILE",
        "enabled" : true,
        "defaultAction" : false,
        "priority" : 90,
        "config" : { }
      }, {
        "alias" : "delete_credential",
        "name" : "Delete Credential",
        "providerId" : "delete_credential",
        "enabled" : true,
        "defaultAction" : false,
        "priority" : 100,
        "config" : { }
      }, {
        "alias" : "update_user_locale",
        "name" : "Update User Locale",
        "providerId" : "update_user_locale",
        "enabled" : true,
        "defaultAction" : false,
        "priority" : 1000,
        "config" : { }
      } ],
      "browserFlow" : "browser",
      "registrationFlow" : "registration",
      "directGrantFlow" : "direct grant",
      "resetCredentialsFlow" : "reset credentials",
      "clientAuthenticationFlow" : "clients",
      "dockerAuthenticationFlow" : "docker auth",
      "firstBrokerLoginFlow" : "first broker login",
      "attributes" : {
        "cibaBackchannelTokenDeliveryMode" : "poll",
        "cibaAuthRequestedUserHint" : "login_hint",
        "clientOfflineSessionMaxLifespan" : "0",
        "oauth2DevicePollingInterval" : "5",
        "clientSessionIdleTimeout" : "0",
        "actionTokenGeneratedByUserLifespan.idp-verify-account-via-email" : "",
        "actionTokenGeneratedByUserLifespan.verify-email" : "",
        "clientOfflineSessionIdleTimeout" : "0",
        "actionTokenGeneratedByUserLifespan.execute-actions" : "",
        "cibaInterval" : "5",
        "realmReusableOtpCode" : "false",
        "cibaExpiresIn" : "120",
        "oauth2DeviceCodeLifespan" : "600",
        "parRequestUriLifespan" : "60",
        "clientSessionMaxLifespan" : "0",
        "shortVerificationUri" : "",
        "actionTokenGeneratedByUserLifespan.reset-credentials" : ""
      },
      "keycloakVersion" : "26.1.4",
      "userManagedAccessAllowed" : false,
      "organizationsEnabled" : false,
      "verifiableCredentialsEnabled" : false,
      "adminPermissionsEnabled" : false,
      "clientProfiles" : {
        "profiles" : [ ]
      },
      "clientPolicies" : {
        "policies" : [ ]
      }
    }
